{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\medip\\\\Desktop\\\\Edify\\\\React\\\\Notesapk\\\\client\\\\src\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [user, setUser] = useState({\n    name: \"User\",\n    id: \"\"\n  });\n  const [notes, setNotes] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(\"add\"); // \"add\" or \"edit\"\n  const [currentNote, setCurrentNote] = useState({\n    _id: \"\",\n    title: \"\",\n    content: \"\"\n  });\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      const parsedUser = JSON.parse(storedUser);\n      setUser(parsedUser);\n      fetchNotes(parsedUser.id);\n    }\n  }, []);\n  const fetchNotes = async userId => {\n    try {\n      const res = await fetch(`http://localhost:5000/api/notes?userId=${userId}`);\n      const data = await res.json();\n      setNotes(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    window.location.href = \"/login\";\n  };\n\n  // Add or Edit note\n  const handleSaveNote = async () => {\n    if (!currentNote.title || !currentNote.content) return alert(\"Fill all fields\");\n    const url = modalType === \"add\" ? \"http://localhost:5000/api/notes\" : `http://localhost:5000/api/notes/${currentNote._id}`;\n    const method = modalType === \"add\" ? \"POST\" : \"PUT\";\n    try {\n      const res = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(modalType === \"add\" ? {\n          ...currentNote,\n          user: user.id\n        } : currentNote)\n      });\n      const data = await res.json();\n      if (modalType === \"add\") {\n        setNotes([...notes, data]);\n      } else {\n        setNotes(notes.map(note => note._id === data._id ? data : note));\n      }\n      setShowModal(false);\n      setCurrentNote({\n        _id: \"\",\n        title: \"\",\n        content: \"\"\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Delete note\n  const handleDelete = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this note?\")) return;\n    try {\n      await fetch(`http://localhost:5000/api/notes/${id}`, {\n        method: \"DELETE\"\n      });\n      setNotes(notes.filter(note => note._id !== id));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Noteflow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"All Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Shared\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Welcome, \", user.name, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"notes-section\",\n        children: notes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No notes yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this) : notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setModalType(\"edit\");\n                setCurrentNote(note);\n                setShowModal(true);\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(note._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, note._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-note-btn\",\n        onClick: () => {\n          setModalType(\"add\");\n          setCurrentNote({\n            title: \"\",\n            content: \"\"\n          });\n          setShowModal(true);\n        },\n        children: \"+ Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: modalType === \"add\" ? \"Add New Note\" : \"Edit Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title\",\n            value: currentNote.title,\n            onChange: e => setCurrentNote({\n              ...currentNote,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Content\",\n            value: currentNote.content,\n            onChange: e => setCurrentNote({\n              ...currentNote,\n              content: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveNote,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"fD+kWgAqeUvBZY+Vjx1dPXctnho=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","_s","user","setUser","name","id","notes","setNotes","showModal","setShowModal","modalType","setModalType","currentNote","setCurrentNote","_id","title","content","storedUser","localStorage","getItem","parsedUser","JSON","parse","fetchNotes","userId","res","fetch","data","json","err","console","error","handleLogout","removeItem","window","location","href","handleSaveNote","alert","url","method","headers","body","stringify","map","note","handleDelete","confirm","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/medip/Desktop/Edify/React/Notesapk/client/src/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  const [user, setUser] = useState({ name: \"User\", id: \"\" });\r\n  const [notes, setNotes] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalType, setModalType] = useState(\"add\"); // \"add\" or \"edit\"\r\n  const [currentNote, setCurrentNote] = useState({ _id: \"\", title: \"\", content: \"\" });\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    if (storedUser) {\r\n      const parsedUser = JSON.parse(storedUser);\r\n      setUser(parsedUser);\r\n      fetchNotes(parsedUser.id);\r\n    }\r\n  }, []);\r\n\r\n  const fetchNotes = async (userId) => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/notes?userId=${userId}`);\r\n      const data = await res.json();\r\n      setNotes(data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    window.location.href = \"/login\";\r\n  };\r\n\r\n  // Add or Edit note\r\n  const handleSaveNote = async () => {\r\n    if (!currentNote.title || !currentNote.content) return alert(\"Fill all fields\");\r\n\r\n    const url = modalType === \"add\"\r\n      ? \"http://localhost:5000/api/notes\"\r\n      : `http://localhost:5000/api/notes/${currentNote._id}`;\r\n\r\n    const method = modalType === \"add\" ? \"POST\" : \"PUT\";\r\n\r\n    try {\r\n      const res = await fetch(url, {\r\n        method,\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(modalType === \"add\" ? { ...currentNote, user: user.id } : currentNote),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (modalType === \"add\") {\r\n        setNotes([...notes, data]);\r\n      } else {\r\n        setNotes(notes.map((note) => (note._id === data._id ? data : note)));\r\n      }\r\n\r\n      setShowModal(false);\r\n      setCurrentNote({ _id: \"\", title: \"\", content: \"\" });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Delete note\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this note?\")) return;\r\n\r\n    try {\r\n      await fetch(`http://localhost:5000/api/notes/${id}`, { method: \"DELETE\" });\r\n      setNotes(notes.filter((note) => note._id !== id));\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-wrapper\">\r\n      <aside className=\"sidebar\">\r\n        <h2>Noteflow</h2>\r\n        <ul>\r\n          <li>All Notes</li>\r\n          <li>Favorites</li>\r\n          <li>Shared</li>\r\n        </ul>\r\n      </aside>\r\n\r\n      <main className=\"main-content\">\r\n        <header>\r\n          <h1>Welcome, {user.name}!</h1>\r\n          <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\r\n        </header>\r\n\r\n        <section className=\"notes-section\">\r\n          {notes.length === 0 ? (\r\n            <p>No notes yet</p>\r\n          ) : (\r\n            notes.map((note) => (\r\n              <div key={note._id} className=\"note-card\">\r\n                <h3>{note.title}</h3>\r\n                <p>{note.content}</p>\r\n                <div className=\"note-actions\">\r\n                  <button onClick={() => {\r\n                    setModalType(\"edit\");\r\n                    setCurrentNote(note);\r\n                    setShowModal(true);\r\n                  }}>Edit</button>\r\n                  <button onClick={() => handleDelete(note._id)}>Delete</button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </section>\r\n\r\n        <button className=\"add-note-btn\" onClick={() => {\r\n          setModalType(\"add\");\r\n          setCurrentNote({ title: \"\", content: \"\" });\r\n          setShowModal(true);\r\n        }}>+ Add Note</button>\r\n\r\n        {/* Modal */}\r\n        {showModal && (\r\n          <div className=\"modal\">\r\n            <div className=\"modal-content\">\r\n              <h2>{modalType === \"add\" ? \"Add New Note\" : \"Edit Note\"}</h2>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={currentNote.title}\r\n                onChange={(e) => setCurrentNote({ ...currentNote, title: e.target.value })}\r\n              />\r\n              <textarea\r\n                placeholder=\"Content\"\r\n                value={currentNote.content}\r\n                onChange={(e) => setCurrentNote({ ...currentNote, content: e.target.value })}\r\n              />\r\n              <button onClick={handleSaveNote}>Save</button>\r\n              <button onClick={() => setShowModal(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}